let scopeT = [1.0, 1.08];
let confT = [
  [0.0, 0.22, 0.56],
  [0.0, 0.65, 0.75],
  [0.0, 0.85, 0.95],
];
let integT = [
  [0.0, 0.22, 0.56],
  [0.55, 0.6, 0.75],
  [0.85, 0.9, 0.95],
];
let availT = [
  [0.0, 0.22, 0.56],
  [0.55, 0.6, 0.65],
  [0.85, 0.9, 0.95],
];
let AVT = [0.85, 0.62, 0.55, 0.2];
let ACT = [0.77, 0.44];
let PRT = [0.85, 0.62, 0.27];
let UIT = [0.85, 0.62];

let AV = -1;
let AC = -1;
let PR = -1;
let UI = -1;
let scope = -1;
let conf = -1;
let integ = -1;
let avail = -1;
let health = -1;
let sens = -1;

let AV_N = document.getElementById("AV_N");
AV_N.addEventListener("click", function () {
  AV = 0;
  updateScore();
});
let AV_A = document.getElementById("AV_A");
AV_A.addEventListener("click", function () {
  AV = 1;
  updateScore();
});
let AV_L = document.getElementById("AV_L");
AV_L.addEventListener("click", function () {
  AV = 2;
  updateScore();
});
let AV_P = document.getElementById("AV_P");
AV_P.addEventListener("click", function () {
  AV = 3;
  updateScore();
});

let AC_L = document.getElementById("AC_L");
AC_L.addEventListener("click", function () {
  AC = 0;
  updateScore();
});
let AC_H = document.getElementById("AC_H");
AC_H.addEventListener("click", function () {
  AC = 1;
  updateScore();
});

let PR_N = document.getElementById("PR_N");
PR_N.addEventListener("click", function () {
  PR = 0;
  updateScore();
});
let PR_L = document.getElementById("PR_L");
PR_L.addEventListener("click", function () {
  PR = 1;
  updateScore();
});
let PR_H = document.getElementById("PR_H");
PR_H.addEventListener("click", function () {
  PR = 2;
  updateScore();
});

let UI_N = document.getElementById("UI_N");
UI_N.addEventListener("click", function () {
  UI = 0;
  updateScore();
});
let UI_R = document.getElementById("UI_R");
UI_R.addEventListener("click", function () {
  UI = 1;
  updateScore();
});

let scope_U = document.getElementById("scope_U");
scope_U.addEventListener("click", function () {
  scope = 0;
  updateScore();
});
let scope_C = document.getElementById("scope_C");
scope_C.addEventListener("click", function () {
  scope = 1;
  updateScore();
});

let conf_N = document.getElementById("conf_N");
conf_N.addEventListener("click", function () {
  conf = 0;
  updateScore();
});
let conf_L = document.getElementById("conf_L");
conf_L.addEventListener("click", function () {
  conf = 1;
  updateScore();
});
let conf_H = document.getElementById("conf_H");
conf_H.addEventListener("click", function () {
  conf = 2;
  updateScore();
});

let integ_N = document.getElementById("integ_N");
integ_N.addEventListener("click", function () {
  integ = 0;
  updateScore();
});
let integ_L = document.getElementById("integ_L");
integ_L.addEventListener("click", function () {
  integ = 1;
  updateScore();
});
let integ_H = document.getElementById("integ_H");
integ_H.addEventListener("click", function () {
  integ = 2;
  updateScore();
});

let avail_N = document.getElementById("avail_N");
avail_N.addEventListener("click", function () {
  avail = 0;
  updateScore();
});
let avail_L = document.getElementById("avail_L");
avail_L.addEventListener("click", function () {
  avail = 1;
  updateScore();
});
let avail_H = document.getElementById("avail_H");
avail_H.addEventListener("click", function () {
  avail = 2;
  updateScore();
});

let health_N = document.getElementById("health_N");
health_N.addEventListener("click", function () {
  health = 0;
  updateScore();
});
let health_L = document.getElementById("health_L");
health_L.addEventListener("click", function () {
  health = 1;
  updateScore();
});
let health_H = document.getElementById("health_H");
health_H.addEventListener("click", function () {
  health = 2;
  updateScore();
});

let sens_N = document.getElementById("sens_N");
sens_N.addEventListener("click", function () {
  sens = 0;
  updateScore();
});
let sens_L = document.getElementById("sens_L");
sens_L.addEventListener("click", function () {
  sens = 1;
  updateScore();
});
let sens_H = document.getElementById("sens_H");
sens_H.addEventListener("click", function () {
  sens = 2;
  updateScore();
});

function updateScore() {
  if (
    (AV !== -1) &
    (AC !== -1) &
    (PR !== -1) &
    (UI !== -1) &
    (scope !== -1) &
    (conf !== -1) &
    (integ !== -1) &
    (avail !== -1) &
    (health !== -1) &
    (sens !== -1)
  ) {
    let warning = document.getElementById("warning");
    warning.style.setProperty("display", "none");
    let score =
      scopeT[scope] *
        (3.326258289 *
          (confT[sens][conf] + integT[health][integ] + availT[health][avail])) +
      1.1 * AVT[AV] * ACT[AC] * PRT[PR] * UIT[UI];
    if (score >= 10) {
      score = 10;
      score = score.toFixed(1);
    } else if (score <= 0) {
      score = 0;
      score = score.toFixed(1);
    } else if (
      confT[sens][conf] + integT[health][integ] + availT[health][avail] ==
      0
    ) {
      score = 0;
      score = score.toFixed(1);
    } else {
      score = Math.ceil(parseFloat(score) * 10.0) / 10.0;
      score = score.toFixed(1);
    }
    let scoreDisplay = document.getElementById("score");
    scoreDisplay.innerHTML = score;
  }
}
